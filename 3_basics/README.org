#+TITLE:C Basics
#+AUTHOR:Marcus Birkenkrahe
#+SUBTITLE:CSC100 Introduction to programming in C/C++
#+STARTUP:overview
#+OPTIONS: toc:1
#+OPTIONS:hideblocks
#+INFOJS_OPT: :view:info
* What are you going to learn?

  * First program
  * Program structure
  * Functions
  * Variables
  * Statements

  Source: King (2008) ch. 2 C Fundamentals - see also [[https://docs.google.com/presentation/d/14qvh00aVb_R09_hrQY0EDEK_JLAkgZ0S/edit?usp=sharing&ouid=102963037093118135110&rtpof=true&sd=true][slides (GDrive)]]
  -----
* Program: Printing a Pun

   * You can run the code block below
    
  #+begin_src C

    #include <stdio.h>

    int main(void)
    {
      printf("To C, or not to C: that is the question.\n");
      return 0;
    }

  #+end_src

  #+RESULTS:
  : To C or not to C: that is the question.

** Structure of a program

   #+begin_example
   directives
   int main (void)
   {
       statements
   }
   #+end_example

** Shell execution

  * You can also save the code in a program ~pun.c~
  * Compile it on the Windows command line or in the Emacs shell:

    | COMMAND            | ACTION                                        |
    |--------------------+-----------------------------------------------|
    | C-x C-f pun.c      | Create C file ~pun.c~                         |
    |                    | Copy block or write code anew in ~pun.c~      |
    | C-x C-s            | Save ~pun.c~                                  |
    | M-x eshell         | start a command line shell in an Emacs buffer |
    | ~gcc -o pun pun.c~ | compile program and create executable         |
    | ~ls~               | list files - you should see ~pun.exe~         |
    | ~pun~              | execute program                               |

    * The shell is an Emacs Lisp simulation of a Linux shell (~bash~)
    * Windows ~PowerShell~ would also work (run with ~./pun[.exe]~)
    
** Editing aspects

   * Notice the slight syntax highlighting difference to ~repl.it~

     #+attr_html: :width 330px
     [[./img/replit.png]]

   * There is no standard - experiment with different themes[fn:1]
   * Show line numbers with ~display-line-numbers-mode~[fn:2]
     
* Summary

  *

* Jargon

  | CONCEPT          | EXPLANATION                                       |
  |------------------+---------------------------------------------------|

* What's next

* Footnotes

[fn:1]You can find nice themes for GNU Emacs here, and install them
using ~M-x package-list-packages~.

[fn:2]If you always want to have line numbers and highlight the line
under the cursor, put these lines in your ~.emacs~ file: and restart
Emacs:
#+begin_src emacs-lisp
  ;; always display line numbers
  (global-display-line-numbers-mode)
  ;; enable global highlighting
  (global-hl-line-mode 1) 
#+end_src
