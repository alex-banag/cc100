#+TITLE:Systems
#+AUTHOR:Systems
#+SUBTITLE:CSC100 Introduction to Programming in C/C++
#+STARTUP:overview
#+OPTIONS:hideblocks
#+OPTIONS: toc:nil num:nil ^:nil
#+INFOJS_OPT: :view:info
* Interlude: systems

  |System = a whole made up of several parts|

  #+attr_html: :width 400px
  [[./img/system.png]]

  | PART          | STATE 1 | STATE 2 |
  |---------------+---------+---------|
  | Boundary      | open    | closed  |
  | Elements      | inside  | outside |
  | Relationships | yes     | no      |
  | Flow          | input   | output  |

* System activities

  * Move elements
  * Add/delete elements
  * Add/delete relationships
  * Transcend boundary

* Examples for systems

  Your turn: fill in the details of these systems!
  
  | System    | Boundary | Elements | Relationships | Flow |
  |-----------+----------+----------+---------------+------|
  | Car       |          |          |               |      |
  | College   |          |          |               |      |
  | Computer  |          |          |               |      |
  | Cow       |          |          |               |      |
  | Earth     |          |          |               |      |
  | House     |          |          |               |      |
  | Person    |          |          |               |      |
  | Phone     |          |          |               |      |
  | Schoology |          |          |               |      |

  Can you think of things that are not systems?

* TODO Ways to describe and manipulate systems

** Models/abstractions

   
   
** Stories/Narratives

** Computer algorithms

** Mathematical functions

* Summary

  * Systems are everywhere (but not everything is a system)
  * Powerful concept with many applications ("[[https://en.wikipedia.org/wiki/System][System sciences]]")
  * Systems have: boundaries, elements, relationships, and flow
  * Systems can be described through models or stories
  * Computers are a special case of information system
  * Attributes related to system properties are called "systemic"
